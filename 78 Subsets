
Given a set of distinct integers, nums, return all possible subsets (the power set).

Note: The solution set must not contain duplicate subsets.

Example:

Input: nums = [1,2,3]
Output:
[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]
 
 
 
 
 public List<List<Integer>> subsets(int[] nums) {
        List<List<Integer>> subset = new ArrayList();
        dfs(subset,0,nums,new ArrayList());
        return subset;
    } 
    
    void dfs( List<List<Integer>> subset,int index,int[] nums,List<Integer> current){
                subset.add(new ArrayList(current));
                for(int i=index;i<nums.length;i++){
                    current.add(nums[i]);
                    dfs(subset,i+1,nums, current);
                    current.remove(current.size()-1);           
                } 
    }
