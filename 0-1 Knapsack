Problem Description

Given two integer arrays A and B of size N each which represent values and weights associated with N items respectively.

Also given an integer C which represents knapsack capacity.

Find out the maximum value subset of A such that sum of the weights of this subset is smaller than or equal to C.

NOTE:

You cannot break an item, either pick the complete item, or donâ€™t pick it (0-1 property).

public int solve(int[] A, int[] B, int C) {
       int[][] dp = new int[B.length+1][C+1];
       
       for(int i=1;i<dp.length;i++){ 
           for(int j=1;j<dp[0].length;j++){
               if(B[i-1]>j){
                   dp[i][i] = dp[i-1][j];
               }else{
                    dp[i][i] = Math.max(dp[i-1][j],A[i-1]+dp[i-1][j-B[i-1]]);
               }
           }
       }
       
       return dp[B.length][C];
       
    }
