Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Notice that the solution set must not contain duplicate triplets.

Example 1:

Input: nums = [-1,0,1,2,-1,-4]
Output: [[-1,-1,2],[-1,0,1]]
Example 2:

Input: nums = []
Output: []
Example 3:

Input: nums = [0]
Output: []


List<List<Integer>> res = new ArrayList();
    public List<List<Integer>> threeSum(int[] nums) {
        Arrays.sort(nums);
        for(int i=0;i<nums.length;i++){
            if(i==0 || nums[i-1]!=nums[i]){
                twoSumSorted(i+1,nums.length-1,nums,0-nums[i]);
            }
        }
        return res;
    }
    
    
    void twoSumSorted(int i,int j,int[] nums,int target){
        int a1 = nums[i-1];
        while(i<j){ //search space
            if(nums[i]+nums[j]>target){
                j--;
            }else if(nums[i]+nums[j]<target){
                i++;
            }else{
                List<Integer> list = new ArrayList();
                list.add(a1);list.add(nums[i]);list.add(nums[j]);
                
                res.add(list);
                
                

                //duplicate b
                while(i<j && nums[i]==nums[i+1])i++;
                //duplicate c
                while(i<j && nums[j]==nums[j-1])j--;
                
                i++;j--;
            }
        }
    }


