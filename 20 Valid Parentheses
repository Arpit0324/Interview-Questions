20. Valid Parentheses
Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
 

Example 1:

Input: s = "()"
Output: true
Example 2:

Input: s = "()[]{}"
Output: true

public boolean isValid(String s) {
        
       Stack<Character> stack = new Stack(); //O(n)
       for(char c :  s.toCharArray()){ //O(n)
           if(c=='(' || c=='[' ||  c=='{'){
               stack.add(c);
           }else{
               if(stack.isEmpty())return false;
               if(c==']' &&  stack.peek()!='[')return false;
               if(c==')' &&  stack.peek()!='(')return false;
               if(c=='}' &&  stack.peek()!='{')return false;
               stack.pop();
           }
       }
        
       return stack.isEmpty();   
    }
