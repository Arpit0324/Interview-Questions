Given a string containing just the characters '(' and ')', find the length of the longest valid (well-formed) parentheses substring.

Example 1:

Input: "(()"
Output: 2
Explanation: The longest valid parentheses substring is "()"
Example 2:

Input: ")()())"
Output: 4
Explanation: The longest valid parentheses substring is "()()"


public int longestValidParentheses(String s) {
      
        Stack<Character> ct = new Stack();
        Stack<Integer> index = new Stack();
        index.add(-1);
        int max = 0;
        
        for(int i=0;i<s.length();i++){
            if(s.charAt(i)=='('){
                ct.add('(');
                index.add(i);
            }else{ //closing bracket
                if(!ct.isEmpty() && ct.peek()=='('){
                    ct.pop();
                    index.pop();
                    max = Math.max(max, i-index.peek());
                }else{
                   index.add(i); 
                }
            }
        }
     return max;
    }


//Approach

// -1 0 1 2 3 4 5 6 7

//Character stack              

//Index stack    -1  0  5 
          
//Len 2,4,2
